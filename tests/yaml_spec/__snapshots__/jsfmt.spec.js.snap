// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`aliases-in-block-sequence.yml 1`] = `
- &a a
- &b b
- *a
- *b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- &a a
- &b b
- *a
- *b

`;

exports[`aliases-in-explicit-block-mapping.yml 1`] = `
? &a a
: &b b
: *a
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&a a: &b b
: *a

`;

exports[`allowed-characters-in-alias.yml 1`] = `
a: &:@*!$"<foo>: scalar a
b: *:@*!$"<foo>:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: &:@*!$"<foo>: scalar a
b: *:@*!$"<foo>:

`;

exports[`allowed-characters-in-keys.yml 1`] = `
a!"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~: safe
?foo: safe question mark
:foo: safe colon
-foo: safe dash
this is#not: a comment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a!"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~: safe
?foo: safe question mark
:foo: safe colon
-foo: safe dash
this is#not: a comment

`;

exports[`allowed-characters-in-plain-scalars.yml 1`] = `
safe: a!"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~
     !"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~
safe question mark: ?foo
safe colon: :foo
safe dash: -foo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
safe:
  a!"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~ !"#$%&'()*+,-./09:;<=>?@AZ[\\]^_\`az{|}~
safe question mark: ?foo
safe colon: :foo
safe dash: -foo

`;

exports[`allowed-characters-in-quoted-mapping-key.yml 1`] = `
"foo\\nbar:baz\\tx \\\\$%^&*()x": 23
'x\\ny:z\\tx $%^&*()x': 24
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"foo\\nbar:baz\\tx \\\\$%^&*()x": 23
'x\\ny:z\\tx $%^&*()x': 24

`;

exports[`anchor-before-zero-indented-sequence.yml 1`] = `
---
seq:
 &anchor
- a
- b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
seq: &anchor
  - a
  - b

`;

exports[`anchor-with-unicode-character.yml 1`] = `
---
- &😁 unicode anchor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- &😁 unicode anchor

`;

exports[`anchors-and-tags.yml 1`] = `
 - &a !!str a
 - !!int 2
 - !!int &c 4
 - &d d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- !!str &a a
- !!int 2
- !!int &c 4
- &d d

`;

exports[`anchors-in-mapping.yml 1`] = `
&a a: b
c: &d d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&a a: b
c: &d d

`;

exports[`anchors-with-colon-in-name.yml 1`] = `
&a: key: &a value
foo:
  *a:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&a: key: &a value
foo: *a:

`;

exports[`backslashes-in-singlequotes.yml 1`] = `
'foo: bar\\': baz'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'foo: bar\\': baz'

`;

exports[`bare-document-after-document-end-marker.yml 1`] = `
---
scalar1
...
key: value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scalar1
...
key: value

`;

exports[`blank-lines.yml 1`] = `
foo: 1

bar: 2
    
text: |
  a
    
  b

  c
 
  d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo: 1

bar: 2

text: |
  a
    
  b

  c

  d

`;

exports[`block-mapping-with-missing-values.yml 1`] = `
? a
? b
c:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
? a
? b
? c

`;

exports[`block-mapping-with-multiline-scalars.yml 1`] = `
? a
  true
: null
  d
? e
  42
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a true: null d
? e 42

`;

exports[`block-mappings-in-block-sequence.yml 1`] = `
 - key: value
   key2: value2
 -
   key3: value3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- key: value
  key2: value2
- key3: value3

`;

exports[`block-scalar-indicator-order.yml 1`] = `
- |2-
  explicit indent and chomp
- |-2
  chomp and explicit indent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- |2-
  explicit indent and chomp
- |2-
  chomp and explicit indent

`;

exports[`block-scalar-keep.yml 1`] = `
--- |+
 ab
 
  
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|+
  ab

   

`;

exports[`block-scalar-strip.yml 1`] = `
|-
 ab
 
 
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|-
  ab

`;

exports[`block-scalar-with-spaces-only.yml 1`] = `
empty block scalar: >
 
  
   
 # comment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empty block scalar: >
# comment

`;

exports[`block-sequence-in-block-mapping.yml 1`] = `
key:
 - item1
 - item2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
key:
  - item1
  - item2

`;

exports[`block-sequence-in-block-sequence.yml 1`] = `
- - s1_i1
  - s1_i2
- s2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- - s1_i1
  - s1_i2
- s2

`;

exports[`block-submapping.yml 1`] = `
foo:
  bar: 1
baz: 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo:
  bar: 1
baz: 2

`;

exports[`colon-in-double-quoted-string.yml 1`] = `
"foo: bar\\": baz"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'foo: bar": baz'

`;

exports[`comment-in-flow-sequence-before-comma.yml 1`] = `
---
[ word1
# comment
, word2]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[
  word1,
  # comment
  word2,
]

`;

exports[`construct-binary.yml 1`] = `
canonical: !!binary "\\
 R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5\\
 OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+\\
 +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC\\
 AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs="
generic: !!binary |
 R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5
 OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+
 +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC
 AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=
description:
 The binary value above is a tiny arrow encoded as a gif image.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
canonical:
  !!binary "\\
 R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5\\
 OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+\\
 +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC\\
 AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs="
generic: !!binary |
  R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5
  OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+
  +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC
  AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=
description: The binary value above is a tiny arrow encoded as a gif image.

`;

exports[`document-start-on-last-line.yml 1`] = `
---
a: b
---
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: b
...


`;

exports[`document-with-footer.yml 1`] = `
aaa: bbb
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aaa: bbb

`;

exports[`empty-lines-at-end-of-document.yml 1`] = `
:



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:

`;

exports[`empty-lines-between-mapping-elements.yml 1`] = `
1: 2


3: 4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1: 2

3: 4

`;

exports[`empty-stream.yml 1`] = `
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`;

exports[`escaped-slash-in-double-quotes.yml 1`] = `
escaped slash: "a\\/b"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
escaped slash: "a\\/b"

`;

exports[`explicit-non-specific-tag.yml 1`] = `
! a
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! a

`;

exports[`flow-mapping.yml 1`] = `
{foo: you, bar: far}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ foo: you, bar: far }

`;

exports[`flow-mapping-in-block-sequence.yml 1`] = `
- {a: b}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- { a: b }

`;

exports[`flow-sequence.yml 1`] = `
[foo, bar, 42]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[foo, bar, 42]

`;

exports[`flow-sequence-in-block-mapping.yml 1`] = `
a: [b, c]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: [b, c]

`;

exports[`flow-sequence-in-flow-mapping.yml 1`] = `
{a: [b, c], [d, e]: f}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ a: [b, c], [d, e]: f }

`;

exports[`flow-sequence-in-flow-sequence.yml 1`] = `
[a, [b, c]]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[a, [b, c]]

`;

exports[`folded-block-scalar.yml 1`] = `
>
 ab
 cd
 
 ef


 gh
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  ab cd

  ef


  gh

`;

exports[`implicit-flow-mapping-key-on-one-line.yml 1`] = `
[flow]: block
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[flow]: block

`;

exports[`key-with-anchor-after-missing-explicit-mapping-value.yml 1`] = `
---
a: 1
? b
&anchor c: 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: 1
? b
&anchor c: 3

`;

exports[`literal-block-scalar.yml 1`] = `
a: |
 ab
 
 cd
 ef
 

...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: |
  ab

  cd
  ef


`;

exports[`literal-unicode.yml 1`] = `
---
wanted: love ♥ and peace ☮
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wanted: love ♥ and peace ☮

`;

exports[`lookahead-test-cases.yml 1`] = `
- bla"keks: foo
- bla]keks: foo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- bla"keks: foo
- bla]keks: foo

`;

exports[`mapping-key-and-flow-sequence-item-anchors.yml 1`] = `
---
&mapping
&key [ &item a, b, c ]: value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&mapping
&key [&item a, b, c]: value

`;

exports[`mapping-with-anchor-on-document-start-line.yml 1`] = `
--- &anchor a: b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&anchor a: b

`;

exports[`mixed-block-mapping-explicit-to-implicit.yml 1`] = `
? a
: 13
1.5: d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: 13
1.5: d

`;

exports[`mixed-block-mapping-implicit-to-explicit.yml 1`] = `
a: 4.2
? 23
: d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: 4.2
23: d

`;

exports[`multi-level-mapping-indent.yml 1`] = `
a:
  b:
    c: d
  e:
    f: g
h: i
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a:
  b:
    c: d
  e:
    f: g
h: i

`;

exports[`multiline-plain-scalar-with-empty-line.yml 1`] = `
---
plain: a
 b

 c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plain: a b

  c

`;

exports[`multiline-scalar-at-top-level.yml 1`] = `
a
b  
  c
d

e
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a b c d

e

`;

exports[`multiline-scalar-in-mapping.yml 1`] = `
a: b
 c
d:
 e
  f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: b c
d: e f

`;

exports[`multiline-scalar-that-looks-like-a-yaml-directive.yml 1`] = `
---
scalar
%YAML 1.2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scalar %YAML 1.2

`;

exports[`multiple-entry-block-sequence.yml 1`] = `
- foo
- bar
- 42
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- foo
- bar
- 42

`;

exports[`multiple-pair-block-mapping.yml 1`] = `
foo: blue
bar: arrr
baz: jazz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo: blue
bar: arrr
baz: jazz

`;

exports[`nested-flow-collections.yml 1`] = `
---
{
 a: [
  b, c, {
   d: [e, f]
  }
 ]
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ a: [b, c, { d: [e, f] }] }

`;

exports[`nested-flow-collections-on-one-line.yml 1`] = `
---
{ a: [b, c, { d: [e, f] } ] }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ a: [b, c, { d: [e, f] }] }

`;

exports[`node-anchor-and-tag-on-seperate-lines.yml 1`] = `
key: &anchor
 !!map
  a: b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
key: !!map &anchor
  a: b

`;

exports[`node-and-mapping-key-anchors.yml 1`] = `
---
top1: &node1
  &k1 key1: one
top2: &node2 # comment
  key2: two
top3:
  &k3 key3: three
top4:
  &node4
  &k4 key4: four
top5:
  &node5
  key5: five
top6: &val6
  six
top7:
  &val7 seven
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
top1: &node1
  &k1 key1: one
top2: &node2 # comment
  key2: two
top3:
  &k3 key3: three
top4: &node4
  &k4 key4: four
top5: &node5
  key5: five
top6: &val6 six
top7: &val7 seven

`;

exports[`non-specific-tags-on-scalars.yml 1`] = `
- plain
- "double quoted"
- 'single quoted'
- >
  block
- plain again
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- plain
- "double quoted"
- "single quoted"
- >
  block
- plain again

`;

exports[`plain-mapping-key-ending-with-colon.yml 1`] = `
---
key ends with two colons::: value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
key ends with two colons::: value

`;

exports[`plain-scalar-looking-like-key-comment-anchor-and-tag.yml 1`] = `
k:#foo
 &a !t s
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
k:#foo &a !t s

`;

exports[`plain-scalar-with-backslashes.yml 1`] = `
---
plain\\value\\with\\backslashes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plain\\value\\with\\backslashes

`;

exports[`plain-url-in-flow-mapping.yml 1`] = `
- { url: http://example.org }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- { url: http://example.org }

`;

exports[`scalars-on-line.yml 1`] = `
--- "quoted
string"
--- &node foo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"quoted
string"
...
&node foo

`;

exports[`sequence-entry-that-looks-like-two-with-wrong-indentation.yml 1`] = `
- single multiline
 - sequence entry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- single multiline - sequence entry

`;

exports[`sequence-indent.yml 1`] = `
foo:
- 42
bar:
  - 44
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo:
  - 42
bar:
  - 44

`;

exports[`sequence-with-same-indentation-as-parent-mapping.yml 1`] = `
1:
- 2
- 3
4: 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1:
  - 2
  - 3
4: 5

`;

exports[`simple-mapping-indent.yml 1`] = `
foo:
  bar: baz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo:
  bar: baz

`;

exports[`single-entry-block-sequence.yml 1`] = `
- foo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- foo

`;

exports[`single-pair-block-mapping.yml 1`] = `
foo: bar
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo: bar

`;

exports[`spec-example-2-1-sequence-of-scalars.yml 1`] = `
- Mark McGwire
- Sammy Sosa
- Ken Griffey
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Mark McGwire
- Sammy Sosa
- Ken Griffey

`;

exports[`spec-example-2-2-mapping-scalars-to-scalars.yml 1`] = `
hr:  65    # Home runs
avg: 0.278 # Batting average
rbi: 147   # Runs Batted In
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hr: 65 # Home runs
avg: 0.278 # Batting average
rbi: 147 # Runs Batted In

`;

exports[`spec-example-2-3-mapping-scalars-to-sequences.yml 1`] = `
american:
  - Boston Red Sox
  - Detroit Tigers
  - New York Yankees
national:
  - New York Mets
  - Chicago Cubs
  - Atlanta Braves
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
american:
  - Boston Red Sox
  - Detroit Tigers
  - New York Yankees
national:
  - New York Mets
  - Chicago Cubs
  - Atlanta Braves

`;

exports[`spec-example-2-4-sequence-of-mappings.yml 1`] = `
-
  name: Mark McGwire
  hr:   65
  avg:  0.278
-
  name: Sammy Sosa
  hr:   63
  avg:  0.288
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- name: Mark McGwire
  hr: 65
  avg: 0.278
- name: Sammy Sosa
  hr: 63
  avg: 0.288

`;

exports[`spec-example-2-5-sequence-of-sequences.yml 1`] = `
- [name        , hr, avg  ]
- [Mark McGwire, 65, 0.278]
- [Sammy Sosa  , 63, 0.288]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- [name, hr, avg]
- [Mark McGwire, 65, 0.278]
- [Sammy Sosa, 63, 0.288]

`;

exports[`spec-example-2-6-mapping-of-mappings.yml 1`] = `
Mark McGwire: {hr: 65, avg: 0.278}
Sammy Sosa: {
    hr: 63,
    avg: 0.288
  }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Mark McGwire: { hr: 65, avg: 0.278 }
Sammy Sosa: { hr: 63, avg: 0.288 }

`;

exports[`spec-example-2-7-two-documents-in-a-stream.yml 1`] = `
# Ranking of 1998 home runs
---
- Mark McGwire
- Sammy Sosa
- Ken Griffey

# Team ranking
---
- Chicago Cubs
- St Louis Cardinals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Ranking of 1998 home runs
---
- Mark McGwire
- Sammy Sosa
- Ken Griffey

# Team ranking
...
- Chicago Cubs
- St Louis Cardinals

`;

exports[`spec-example-2-8-play-by-play-feed-from-a-game.yml 1`] = `
---
time: 20:03:20
player: Sammy Sosa
action: strike (miss)
...
---
time: 20:03:47
player: Sammy Sosa
action: grand slam
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
time: 20:03:20
player: Sammy Sosa
action: strike (miss)
...
time: 20:03:47
player: Sammy Sosa
action: grand slam

`;

exports[`spec-example-2-9-single-document-with-two-comments.yml 1`] = `
---
hr: # 1998 hr ranking
  - Mark McGwire
  - Sammy Sosa
rbi:
  # 1998 rbi ranking
  - Sammy Sosa
  - Ken Griffey
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hr: # 1998 hr ranking
  - Mark McGwire
  - Sammy Sosa
rbi:
  # 1998 rbi ranking
  - Sammy Sosa
  - Ken Griffey

`;

exports[`spec-example-2-10-node-for-sammy-sosa-appears-twice-in-this-document.yml 1`] = `
---
hr:
  - Mark McGwire
  # Following node labeled SS
  - &SS Sammy Sosa
rbi:
  - *SS # Subsequent occurrence
  - Ken Griffey
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hr:
  - Mark McGwire
  # Following node labeled SS
  - &SS Sammy Sosa
rbi:
  - *SS # Subsequent occurrence
  - Ken Griffey

`;

exports[`spec-example-2-11-mapping-between-sequences.yml 1`] = `
? - Detroit Tigers
  - Chicago cubs
:
  - 2001-07-23

? [ New York Yankees,
    Atlanta Braves ]
: [ 2001-07-02, 2001-08-12,
    2001-08-14 ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
? - Detroit Tigers
  - Chicago cubs
: - 2001-07-23

[New York Yankees, Atlanta Braves]: [2001-07-02, 2001-08-12, 2001-08-14]

`;

exports[`spec-example-2-12-compact-nested-mapping.yml 1`] = `
---
# Products purchased
- item    : Super Hoop
  quantity: 1
- item    : Basketball
  quantity: 4
- item    : Big Shoes
  quantity: 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Products purchased
- item: Super Hoop
  quantity: 1
- item: Basketball
  quantity: 4
- item: Big Shoes
  quantity: 1

`;

exports[`spec-example-2-13-in-literals-newlines-are-preserved.yml 1`] = `
# ASCII Art
--- |
  \\//||\\/||
  // ||  ||__
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ASCII Art
---
|
  \\//||\\/||
  // ||  ||__

`;

exports[`spec-example-2-14-in-the-folded-scalars-newlines-become-spaces.yml 1`] = `
--- >
  Mark McGwire's
  year was crippled
  by a knee injury.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  Mark McGwire's year was crippled by a knee injury.

`;

exports[`spec-example-2-15-folded-newlines-are-preserved-for-more-indented-and-blank-lines.yml 1`] = `
>
 Sammy Sosa completed another
 fine season with great stats.

   63 Home Runs
   0.288 Batting Average

 What a year!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  Sammy Sosa completed another fine season with great stats.

    63 Home Runs
    0.288 Batting Average

  What a year!

`;

exports[`spec-example-2-16-indentation-determines-scope.yml 1`] = `
name: Mark McGwire
accomplishment: >
  Mark set a major league
  home run record in 1998.
stats: |
  65 Home Runs
  0.278 Batting Average
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
name: Mark McGwire
accomplishment: >
  Mark set a major league home run record in 1998.
stats: |
  65 Home Runs
  0.278 Batting Average

`;

exports[`spec-example-2-17-quoted-scalars.yml 1`] = `
unicode: "Sosa did fine.\\u263A"
control: "\\b1998\\t1999\\t2000\\n"
hex esc: "\\x0d\\x0a is \\r\\n"

single: '"Howdy!" he cried.'
quoted: ' # Not a ''comment''.'
tie-fighter: '|\\-*-/|'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
unicode: "Sosa did fine.\\u263A"
control: "\\b1998\\t1999\\t2000\\n"
hex esc: "\\x0d\\x0a is \\r\\n"

single: '"Howdy!" he cried.'
quoted: " # Not a 'comment'."
tie-fighter: '|\\-*-/|'

`;

exports[`spec-example-2-18-multi-line-flow-scalars.yml 1`] = `
plain:
  This unquoted scalar
  spans many lines.

quoted: "So does this
  quoted scalar.\\n"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plain: This unquoted scalar spans many lines.

quoted: "So does this
  quoted scalar.\\n"

`;

exports[`spec-example-2-23-various-explicit-tags.yml 1`] = `
---
not-date: !!str 2002-04-28

picture: !!binary |
 R0lGODlhDAAMAIQAAP//9/X
 17unp5WZmZgAAAOfn515eXv
 Pz7Y6OjuDg4J+fn5OTk6enp
 56enmleECcgggoBADs=

application specific tag: !something |
 The semantics of the tag
 above may be different for
 different documents.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
not-date: !!str 2002-04-28

picture: !!binary |
  R0lGODlhDAAMAIQAAP//9/X
  17unp5WZmZgAAAOfn515eXv
  Pz7Y6OjuDg4J+fn5OTk6enp
  56enmleECcgggoBADs=

application specific tag: !something |
  The semantics of the tag
  above may be different for
  different documents.

`;

exports[`spec-example-2-24-global-tags.yml 1`] = `
%TAG ! tag:clarkevans.com,2002:
--- !shape
  # Use the ! handle for presenting
  # tag:clarkevans.com,2002:circle
- !circle
  center: &ORIGIN {x: 73, y: 129}
  radius: 7
- !line
  start: *ORIGIN
  finish: { x: 89, y: 102 }
- !label
  start: *ORIGIN
  color: 0xFFEEBB
  text: Pretty vector drawing.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG ! tag:clarkevans.com,2002:
---
!shape
# Use the ! handle for presenting
# tag:clarkevans.com,2002:circle
- !circle
  center: &ORIGIN { x: 73, y: 129 }
  radius: 7
- !line
  start: *ORIGIN
  finish: { x: 89, y: 102 }
- !label
  start: *ORIGIN
  color: 0xFFEEBB
  text: Pretty vector drawing.

`;

exports[`spec-example-2-25-unordered-sets.yml 1`] = `
# Sets are represented as a
# Mapping where each key is
# associated with a null value
--- !!set
? Mark McGwire
? Sammy Sosa
? Ken Griff
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Sets are represented as a
# Mapping where each key is
# associated with a null value
---
!!set
? Mark McGwire
? Sammy Sosa
? Ken Griff

`;

exports[`spec-example-2-26-ordered-mappings.yml 1`] = `
# Ordered maps are represented as
# A sequence of mappings, with
# each mapping having one key
--- !!omap
- Mark McGwire: 65
- Sammy Sosa: 63
- Ken Griffy: 58
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Ordered maps are represented as
# A sequence of mappings, with
# each mapping having one key
---
!!omap
- Mark McGwire: 65
- Sammy Sosa: 63
- Ken Griffy: 58

`;

exports[`spec-example-2-27-invoice.yml 1`] = `
--- !<tag:clarkevans.com,2002:invoice>
invoice: 34843
date   : 2001-01-23
bill-to: &id001
    given  : Chris
    family : Dumars
    address:
        lines: |
            458 Walkman Dr.
            Suite #292
        city    : Royal Oak
        state   : MI
        postal  : 48046
ship-to: *id001
product:
    - sku         : BL394D
      quantity    : 4
      description : Basketball
      price       : 450.00
    - sku         : BL4438H
      quantity    : 1
      description : Super Hoop
      price       : 2392.00
tax  : 251.42
total: 4443.52
comments:
    Late afternoon is best.
    Backup contact is Nancy
    Billsmer @ 338-4338.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!<tag:clarkevans.com,2002:invoice>
invoice: 34843
date: 2001-01-23
bill-to: &id001
  given: Chris
  family: Dumars
  address:
    lines: |
      458 Walkman Dr.
      Suite #292
    city: Royal Oak
    state: MI
    postal: 48046
ship-to: *id001
product:
  - sku: BL394D
    quantity: 4
    description: Basketball
    price: 450.00
  - sku: BL4438H
    quantity: 1
    description: Super Hoop
    price: 2392.00
tax: 251.42
total: 4443.52
comments: Late afternoon is best. Backup contact is Nancy Billsmer @ 338-4338.

`;

exports[`spec-example-2-28-log-file.yml 1`] = `
---
Time: 2001-11-23 15:01:42 -5
User: ed
Warning:
  This is an error message
  for the log file
---
Time: 2001-11-23 15:02:31 -5
User: ed
Warning:
  A slightly different error
  message.
---
Date: 2001-11-23 15:03:17 -5
User: ed
Fatal:
  Unknown variable "bar"
Stack:
  - file: TopClass.py
    line: 23
    code: |
      x = MoreObject("345\\n")
  - file: MoreClass.py
    line: 58
    code: |-
      foo = bar
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Time: 2001-11-23 15:01:42 -5
User: ed
Warning: This is an error message for the log file
...
Time: 2001-11-23 15:02:31 -5
User: ed
Warning: A slightly different error message.
...
Date: 2001-11-23 15:03:17 -5
User: ed
Fatal: Unknown variable "bar"
Stack:
  - file: TopClass.py
    line: 23
    code: |
      x = MoreObject("345\\n")
  - file: MoreClass.py
    line: 58
    code: |-
      foo = bar

`;

exports[`spec-example-5-3-block-structure-indicators.yml 1`] = `
sequence:
- one
- two
mapping:
  ? sky
  : blue
  sea : green
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sequence:
  - one
  - two
mapping:
  sky: blue
  sea: green

`;

exports[`spec-example-5-4-flow-collection-indicators.yml 1`] = `
sequence: [ one, two, ]
mapping: { sky: blue, sea: green }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sequence: [one, two]
mapping: { sky: blue, sea: green }

`;

exports[`spec-example-5-5-comment-indicator.yml 1`] = `
# Comment only.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Comment only.

`;

exports[`spec-example-5-6-node-property-indicators.yml 1`] = `
anchored: !local &anchor value
alias: *anchor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
anchored: !local &anchor value
alias: *anchor

`;

exports[`spec-example-5-7-block-scalar-indicators.yml 1`] = `
literal: |
  some
  text
folded: >
  some
  text
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
literal: |
  some
  text
folded: >
  some text

`;

exports[`spec-example-5-8-quoted-scalar-indicators.yml 1`] = `
single: 'text'
double: "text"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
single: "text"
double: "text"

`;

exports[`spec-example-5-9-directive-indicator.yml 1`] = `
%YAML 1.2
--- text
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%YAML 1.2
---
text

`;

exports[`spec-example-5-12-tabs-and-spaces.yml 1`] = `
# Tabs and spaces
quoted: "Quoted 	"
block:	|
  void main() {
  	printf("Hello, world!\\n");
  }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Tabs and spaces
quoted: "Quoted 	"
block: |
  void main() {
  	printf("Hello, world!\\n");
  }

`;

exports[`spec-example-6-1-indentation-spaces.yml 1`] = `
  # Leading comment line spaces are
   # neither content nor indentation.
    
Not indented:
 By one space: |
    By four
      spaces
 Flow style: [    # Leading spaces
   By two,        # in flow style
  Also by two,    # are neither
  	Still by two   # content nor
    ]             # indentation.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Leading comment line spaces are
# neither content nor indentation.

Not indented:
  By one space: |
    By four
      spaces
  Flow style: # Leading spaces
    [
      By two, # in flow style
      Also by two, # are neither
      Still by two, # content nor
    ] # indentation.

`;

exports[`spec-example-6-2-indentation-indicators.yml 1`] = `
? a
: -	b
  -  -	c
     - d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a:
  - b
  - - c
    - d

`;

exports[`spec-example-6-3-separation-spaces.yml 1`] = `
- foo:	 bar
- - baz
  -	baz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- foo: bar
- - baz
  - baz

`;

exports[`spec-example-6-4-line-prefixes.yml 1`] = `
plain: text
  lines
quoted: "text
  	lines"
block: |
  text
   	lines
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plain: text lines
quoted: "text
  	lines"
block: |
  text
   	lines

`;

exports[`spec-example-6-5-empty-lines.yml 1`] = `
Folding:
  "Empty line
   	
  as a line feed"
Chomping: |
  Clipped empty lines
 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Folding: "Empty line
   	
  as a line feed"
Chomping: |
  Clipped empty lines

`;

exports[`spec-example-6-6-line-folding.yml 1`] = `
>-
  trimmed
  
 

  as
  space
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>-
  trimmed



  as space

`;

exports[`spec-example-6-7-block-folding.yml 1`] = `
>
  foo 
 
  	 bar

  baz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  foo 

  	 bar

  baz

`;

exports[`spec-example-6-8-flow-folding.yml 1`] = `
"
  foo 
 
  	 bar

  baz
"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"
  foo 
 
  	 bar

  baz
"

`;

exports[`spec-example-6-9-separated-comment.yml 1`] = `
key:    # Comment
  value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
key: # Comment
  value

`;

exports[`spec-example-6-10-comment-lines.yml 1`] = `
  # Comment
   


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Comment

`;

exports[`spec-example-6-11-multi-line-comments.yml 1`] = `
key:    # Comment
        # lines
  value


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
key: # Comment
  # lines
  value

`;

exports[`spec-example-6-12-separation-spaces.yml 1`] = `
{ first: Sammy, last: Sosa }:
# Statistics:
  hr:  # Home runs
     65
  avg: # Average
   0.278
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ first: Sammy, last: Sosa }:
  # Statistics:
  hr: # Home runs
    65
  avg: # Average
    0.278

`;

exports[`spec-example-6-13-reserved-directives.yml 1`] = `
%FOO  bar baz # Should be ignored
              # with a warning.
--- "foo"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%FOO bar baz # Should be ignored
# with a warning.
---
"foo"

`;

exports[`spec-example-6-14-yaml-directive.yml 1`] = `
%YAML 1.3 # Attempt parsing
          # with a warning
---
"foo"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%YAML 1.3 # Attempt parsing
# with a warning
---
"foo"

`;

exports[`spec-example-6-16-tag-directive.yml 1`] = `
%TAG !yaml! tag:yaml.org,2002:
---
!yaml!str "foo"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !yaml! tag:yaml.org,2002:
---
!yaml!str "foo"

`;

exports[`spec-example-6-18-primary-tag-handle.yml 1`] = `
# Private
!foo "bar"
...
# Global
%TAG ! tag:example.com,2000:app/
---
!foo "bar"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Private
!foo "bar"
...
# Global
%TAG ! tag:example.com,2000:app/
---
!foo "bar"

`;

exports[`spec-example-6-19-secondary-tag-handle.yml 1`] = `
%TAG !! tag:example.com,2000:app/
---
!!int 1 - 3 # Interval, not integer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !! tag:example.com,2000:app/
---
!!int 1 - 3 # Interval, not integer

`;

exports[`spec-example-6-20-tag-handles.yml 1`] = `
%TAG !e! tag:example.com,2000:app/
---
!e!foo "bar"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !e! tag:example.com,2000:app/
---
!e!foo "bar"

`;

exports[`spec-example-6-21-local-tag-prefix.yml 1`] = `
%TAG !m! !my-
--- # Bulb here
!m!light fluorescent
...
%TAG !m! !my-
--- # Color here
!m!light green
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !m! !my-
---
# Bulb here
!m!light fluorescent
...
%TAG !m! !my-
---
# Color here
!m!light green

`;

exports[`spec-example-6-22-global-tag-prefix.yml 1`] = `
%TAG !e! tag:example.com,2000:app/
---
- !e!foo "bar"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !e! tag:example.com,2000:app/
---
- !e!foo "bar"

`;

exports[`spec-example-6-23-node-properties.yml 1`] = `
!!str &a1 "foo":
  !!str bar
&a2 baz : *a1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!str &a1 "foo": !!str bar
&a2 baz: *a1

`;

exports[`spec-example-6-24-verbatim-tags.yml 1`] = `
!<tag:yaml.org,2002:str> foo :
  !<!bar> baz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!<tag:yaml.org,2002:str> foo: !<!bar> baz

`;

exports[`spec-example-6-26-tag-shorthands.yml 1`] = `
%TAG !e! tag:example.com,2000:app/
---
- !local foo
- !!str bar
- !e!tag%21 baz
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%TAG !e! tag:example.com,2000:app/
---
- !local foo
- !!str bar
- !e!tag%21 baz

`;

exports[`spec-example-6-28-non-specific-tags.yml 1`] = `
# Assuming conventional resolution:
- "12"
- 12
- ! 12
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Assuming conventional resolution:
- "12"
- 12
- ! 12

`;

exports[`spec-example-6-29-node-anchors.yml 1`] = `
First occurrence: &anchor Value
Second occurrence: *anchor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First occurrence: &anchor Value
Second occurrence: *anchor

`;

exports[`spec-example-7-1-alias-nodes.yml 1`] = `
First occurrence: &anchor Foo
Second occurrence: *anchor
Override anchor: &anchor Bar
Reuse anchor: *anchor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First occurrence: &anchor Foo
Second occurrence: *anchor
Override anchor: &anchor Bar
Reuse anchor: *anchor

`;

exports[`spec-example-7-2-empty-content.yml 1`] = `
{
  foo : !!str,
  !!str : bar,
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ foo: !!str , !!str : bar }

`;

exports[`spec-example-7-3-completely-empty-flow-nodes.yml 1`] = `
{
  ? foo :,
  : bar,
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ foo, : bar }

`;

exports[`spec-example-7-4-double-quoted-implicit-keys.yml 1`] = `
"implicit block key" : [
  "implicit flow key" : value,
 ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"implicit block key": ["implicit flow key": value]

`;

exports[`spec-example-7-5-double-quoted-line-breaks.yml 1`] = `
"folded 
to a space,	
 
to a line feed, or 	\\
 \\ 	non-content"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"folded 
to a space,	
 
to a line feed, or 	\\
 \\ 	non-content"

`;

exports[`spec-example-7-6-double-quoted-lines.yml 1`] = `
" 1st non-empty

 2nd non-empty 
	3rd non-empty "
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" 1st non-empty

 2nd non-empty 
	3rd non-empty "

`;

exports[`spec-example-7-7-single-quoted-characters.yml 1`] = `
'here''s to "quotes"'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'here''s to "quotes"'

`;

exports[`spec-example-7-8-single-quoted-implicit-keys.yml 1`] = `
'implicit block key' : [
  'implicit flow key' : value,
 ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"implicit block key": ["implicit flow key": value]

`;

exports[`spec-example-7-9-single-quoted-lines.yml 1`] = `
' 1st non-empty

 2nd non-empty 
	3rd non-empty '
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" 1st non-empty

 2nd non-empty 
	3rd non-empty "

`;

exports[`spec-example-7-10-plain-characters.yml 1`] = `
# Outside flow collection:
- ::vector
- ": - ()"
- Up, up, and away!
- -123
- http://example.com/foo#bar
# Inside flow collection:
- [ ::vector,
  ": - ()",
  "Up, up and away!",
  -123,
  http://example.com/foo#bar ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Outside flow collection:
- ::vector
- ": - ()"
- Up, up, and away!
- -123
- http://example.com/foo#bar
# Inside flow collection:
- [::vector, ": - ()", "Up, up and away!", -123, http://example.com/foo#bar]

`;

exports[`spec-example-7-11-plain-implicit-keys.yml 1`] = `
implicit block key : [
  implicit flow key : value,
 ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
implicit block key: [implicit flow key: value]

`;

exports[`spec-example-7-12-plain-lines.yml 1`] = `
1st non-empty

 2nd non-empty 
	3rd non-empty
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1st non-empty

2nd non-empty 3rd non-empty

`;

exports[`spec-example-7-13-flow-sequence.yml 1`] = `
- [ one, two, ]
- [three ,four]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- [one, two]
- [three, four]

`;

exports[`spec-example-7-14-flow-sequence-entries.yml 1`] = `
[
"double
 quoted", 'single
           quoted',
plain
 text, [ nested ],
single: pair,
]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
["double
 quoted", "single
           quoted", plain text, [nested], single: pair]

`;

exports[`spec-example-7-15-flow-mappings.yml 1`] = `
- { one : two , three: four , }
- {five: six,seven : eight}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- { one: two, three: four }
- { five: six, seven: eight }

`;

exports[`spec-example-7-16-flow-mapping-entries.yml 1`] = `
{
? explicit: entry,
implicit: entry,
?
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ explicit: entry, implicit: entry, : }

`;

exports[`spec-example-7-17-flow-mapping-separate-values.yml 1`] = `
{
unquoted : "separate",
http://foo.com,
omitted value:,
: omitted key,
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ unquoted: "separate", http://foo.com, omitted value, : omitted key }

`;

exports[`spec-example-7-18-flow-mapping-adjacent-values.yml 1`] = `
{
"adjacent":value,
"readable": value,
"empty":
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ "adjacent": value, "readable": value, "empty" }

`;

exports[`spec-example-7-19-single-pair-flow-mappings.yml 1`] = `
[
foo: bar
]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[foo: bar]

`;

exports[`spec-example-7-20-single-pair-explicit-entry.yml 1`] = `
[
? foo
 bar : baz
]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[foo bar: baz]

`;

exports[`spec-example-7-21-single-pair-implicit-entries.yml 1`] = `
- [ YAML : separate ]
- [ : empty key entry ]
- [ {JSON: like}:adjacent ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- [YAML: separate]
- [: empty key entry]
- [{ JSON: like }: adjacent]

`;

exports[`spec-example-7-23-flow-content.yml 1`] = `
- [ a, b ]
- { a: b }
- "a"
- 'b'
- c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- [a, b]
- { a: b }
- "a"
- "b"
- c

`;

exports[`spec-example-7-24-flow-nodes.yml 1`] = `
- !!str "a"
- 'b'
- &anchor "c"
- *anchor
- !!str
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- !!str "a"
- "b"
- &anchor "c"
- *anchor
- !!str

`;

exports[`spec-example-8-1-block-scalar-header.yml 1`] = `
- | # Empty header↓
 literal
- >1 # Indentation indicator↓
  folded
- |+ # Chomping indicator↓
 keep

- >1- # Both indicators↓
  strip
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- | # Empty header↓
  literal
- >1 # Indentation indicator↓
  folded
- |+ # Chomping indicator↓
  keep

- >1- # Both indicators↓
  strip

`;

exports[`spec-example-8-2-block-indentation-indicator.yml 1`] = `
- |
 detected
- >
 
  
  # detected
- |1
  explicit
- >
 	
 detected
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- |
  detected
- >


  # detected
- |1
  explicit
- >
  	
  detected

`;

exports[`spec-example-8-4-chomping-final-line-break.yml 1`] = `
strip: |-
  text
clip: |
  text
keep: |+
  text
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
strip: |-
  text
clip: |
  text
keep: |+
  text

`;

exports[`spec-example-8-5-chomping-trailing-lines.yml 1`] = `
 # Strip
  # Comments:
strip: |-
  # text
  
 # Clip
  # comments:

clip: |
  # text
 
 # Keep
  # comments:

keep: |+
  # text

 # Trail
  # comments.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Strip
# Comments:
strip: |-
  # text
# Clip
# comments:

clip: |
  # text
# Keep
# comments:

keep: |+
  # text

# Trail
# comments.

`;

exports[`spec-example-8-6-empty-scalar-chomping.yml 1`] = `
strip: >-

clip: >

keep: |+

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
strip: >-
clip: >
keep: |+


`;

exports[`spec-example-8-7-literal-scalar.yml 1`] = `
|
 literal
 	text


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|
  literal
  	text

`;

exports[`spec-example-8-8-literal-content.yml 1`] = `
|
 
  
  literal
   
  
  text

 # Comment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|


  literal
   

  text

# Comment

`;

exports[`spec-example-8-9-folded-scalar.yml 1`] = `
>
 folded
 text


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  folded text

`;

exports[`spec-example-8-10-folded-lines-8-13-final-empty-lines.yml 1`] = `
>

 folded
 line

 next
 line
   * bullet

   * list
   * lines

 last
 line

# Comment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>

  folded line

  next line
    * bullet

    * list
    * lines

  last line

# Comment

`;

exports[`spec-example-8-14-block-sequence.yml 1`] = `
block sequence:
  - one
  - two : three
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
block sequence:
  - one
  - two: three

`;

exports[`spec-example-8-15-block-sequence-entry-types.yml 1`] = `
- # Empty
- |
 block node
- - one # Compact
  - two # sequence
- one: two # Compact mapping
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-  # Empty
- |
  block node
- - one # Compact
  - two # sequence
- one: two # Compact mapping

`;

exports[`spec-example-8-16-block-mappings.yml 1`] = `
block mapping:
 key: value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
block mapping:
  key: value

`;

exports[`spec-example-8-17-explicit-block-mapping-entries.yml 1`] = `
? explicit key # Empty value
? |
  block key
: - one # Explicit compact
  - two # block value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
? explicit key # Empty value
? |
  block key
: - one # Explicit compact
  - two # block value

`;

exports[`spec-example-8-18-implicit-block-mapping-entries.yml 1`] = `
plain key: in-line value
: # Both empty
"quoted key":
- entry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plain key: in-line value
: # Both empty
"quoted key":
  - entry

`;

exports[`spec-example-8-19-compact-block-mappings.yml 1`] = `
- sun: yellow
- ? earth: blue
  : moon: white
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- sun: yellow
- ? earth: blue
  : moon: white

`;

exports[`spec-example-8-20-block-node-types.yml 1`] = `
-
  "flow in block"
- >
 Block scalar
- !!map # Block collection
  foo : bar
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- "flow in block"
- >
  Block scalar
- !!map # Block collection
  foo: bar

`;

exports[`spec-example-8-21-block-scalar-nodes.yml 1`] = `
literal: |2
  value
folded:
   !foo
  >1
 value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
literal: |2
  value
folded: !foo >1
 value

`;

exports[`spec-example-8-22-block-collection-nodes.yml 1`] = `
sequence: !!seq
- entry
- !!seq
 - nested
mapping: !!map
 foo: bar
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sequence: !!seq
  - entry
  - !!seq
    - nested
mapping: !!map
  foo: bar

`;

exports[`spec-example-9-2-document-markers.yml 1`] = `
%YAML 1.2
---
Document
... # Suffix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%YAML 1.2
---
Document
... # Suffix

`;

exports[`spec-example-9-3-bare-documents.yml 1`] = `
Bare
document
...
# No document
...
|
%!PS-Adobe-2.0 # Not the first line
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Bare document
...
# No document
...
|
  %!PS-Adobe-2.0 # Not the first line

`;

exports[`spec-example-9-4-explicit-documents.yml 1`] = `
---
{ matches
% : 20 }
...
---
# Empty
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{ matches %: 20 }
...
# Empty

`;

exports[`spec-example-9-5-directives-documents.yml 1`] = `
%YAML 1.2
--- |
%!PS-Adobe-2.0
...
%YAML1.2
---
# Empty
...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%YAML 1.2
---
|
  %!PS-Adobe-2.0
...
%YAML1.2
---
# Empty

`;

exports[`spec-example-9-6-stream.yml 1`] = `
Document
---
# Empty
...
%YAML 1.2
---
matches %: 20
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Document
...
# Empty
...
%YAML 1.2
---
matches %: 20

`;

exports[`tab-after-document-header.yml 1`] = `
---	scalar
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scalar

`;

exports[`tab-at-beginning-of-line-followed-by-a-flow-mapping.yml 1`] = `
	{}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{}

`;

exports[`tags-for-block-objects.yml 1`] = `
foo: !!seq
  - !!str a
  - !!map
    key: !!str value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
foo: !!seq
  - !!str a
  - !!map
    key: !!str value

`;

exports[`tags-for-flow-objects.yml 1`] = `
!!map {
  k: !!seq
  [ a, !!str b]
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!map { k: !!seq [a, !!str b] }

`;

exports[`tags-for-root-objects.yml 1`] = `
--- !!map
? a
: b
--- !!seq
- !!str c
--- !!str
d
e
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!map
a: b
...
!!seq
- !!str c
...
!!str d e

`;

exports[`tags-in-block-sequence.yml 1`] = `
 - !!str a
 - b
 - !!int 42
 - d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- !!str a
- b
- !!int 42
- d

`;

exports[`tags-in-explicit-mapping.yml 1`] = `
? !!str a
: !!int 47
? c
: !!str d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!str a: !!int 47
c: !!str d

`;

exports[`tags-in-implicit-mapping.yml 1`] = `
!!str a: b
c: !!int 42
e: !!str f
g: h
!!int 23: !!bool false
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!str a: b
c: !!int 42
e: !!str f
g: h
!!int 23: !!bool false

`;

exports[`tags-on-empty-scalars.yml 1`] = `
- !!str
-
  !!null : a
  b: !!str
- !!str : !!null
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- !!str
- !!null : a
  b: !!str
- !!str : !!null

`;

exports[`three-dashes-and-content-without-space.yml 1`] = `
---word1
word2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
---word1 word2

`;

exports[`various-combinations-of-tags-and-anchors.yml 1`] = `
---
&a1
!!str
scalar1
---
!!str
&a2
scalar2
---
&a3
!!str scalar3
---
&a4 !!map
&a5 !!str key5: value4
---
a6: 1
&anchor6 b6: 2
---
!!map
&a8 !!str key8: value7
---
!!map
!!str &a10 key10: value9
---
!!str &a11
value11
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!str &a1 scalar1
...
!!str &a2 scalar2
...
!!str &a3 scalar3
...
!!map &a4
!!str &a5 key5: value4
...
a6: 1
&anchor6 b6: 2
...
!!map
!!str &a8 key8: value7
...
!!map
!!str &a10 key10: value9
...
!!str &a11 value11

`;

exports[`various-location-of-anchors-in-flow-sequence.yml 1`] = `
&flowseq [
 a: b,
 &c c: d,
 { &e e: f },
 &g { g: h }
]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&flowseq [a: b, &c c: d, { &e e: f }, &g { g: h }]

`;

exports[`various-trailing-comments.yml 1`] = `
a: "double
  quotes" # lala
b: plain
 value  # lala
c  : #lala
  d
? # lala
 - seq1
: # lala
 - #lala
  seq2
e:
 &node # lala
 - x: y
block: > # lala
  abcde
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: "double
  quotes" # lala
b: plain value # lala
c: #lala
  d
? # lala
  - seq1
: # lala
  - #lala
    seq2
e: &node # lala
  - x: y
block: > # lala
  abcde

`;

exports[`various-trailing-tabs.yml 1`] = `
a: b	
seq:	
 - a	
c: d	#X
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a: b
seq:
  - a
c: d #X

`;

exports[`whitespace-after-scalars-in-flow.yml 1`] = `
- [a, b , c ]
- { "a"  : b
   , c : 'd' ,
   e   : "f"
  }
- [      ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- [a, b, c]
- { "a": b, c: "d", e: "f" }
- []

`;

exports[`whitespace-around-colon-in-mappings.yml 1`] = `
"top1" : 
  "key1" : &alias1 scalar1
'top2' : 
  'key2' : &alias2 scalar2
top3: &node3 
  *alias1 : scalar3
top4: 
  *alias2 : scalar4
top5   :    
  scalar5
top6: 
  &anchor6 'key6' : scalar6
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"top1":
  "key1": &alias1 scalar1
"top2":
  "key2": &alias2 scalar2
top3: &node3
  *alias1 : scalar3
top4:
  *alias2 : scalar4
top5: scalar5
top6:
  &anchor6 "key6": scalar6

`;

exports[`zero-indented-block-scalar.yml 1`] = `
--- >
line1
line2
line3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  line1 line2 line3

`;

exports[`zero-indented-block-scalar-with-line-that-looks-like-a-comment.yml 1`] = `
--- >
line1
# no comment
line3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>
  line1 # no comment line3

`;
